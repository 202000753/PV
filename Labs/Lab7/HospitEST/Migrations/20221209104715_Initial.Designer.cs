// <auto-generated />
using System;
using HospitEST.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitEST.Migrations
{
    [DbContext(typeof(HospitESTContext))]
    [Migration("20221209104715_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HospitEST.Models.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracticeYears")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77f8e67a-89b8-40af-8a4d-a26050be99b7"),
                            HospitalId = new Guid("40e2cbf4-1add-4f6d-9a2b-a49cc642267e"),
                            Name = "Luis Silva",
                            Practice = "Neurocirurgião",
                            PracticeYears = 19
                        },
                        new
                        {
                            Id = new Guid("b2b60a21-79c0-4461-b670-6ce5fff5d2ed"),
                            HospitalId = new Guid("40e2cbf4-1add-4f6d-9a2b-a49cc642267e"),
                            Name = "Manuel Esteves",
                            Practice = "Medicina Geral e Familiar",
                            PracticeYears = 13
                        },
                        new
                        {
                            Id = new Guid("50f604f5-2cb0-4fc4-82b3-dc90a1b59016"),
                            HospitalId = new Guid("60a0b04c-d87f-4b81-a247-f6f3d18fd856"),
                            Name = "Sofia Feliz",
                            Practice = "Pediatra",
                            PracticeYears = 4
                        },
                        new
                        {
                            Id = new Guid("56226013-9ded-42c3-adb5-5ce8cb276d98"),
                            HospitalId = new Guid("60a0b04c-d87f-4b81-a247-f6f3d18fd856"),
                            Name = "Miguel Neves",
                            Practice = "Ortopedista",
                            PracticeYears = 13
                        });
                });

            modelBuilder.Entity("HospitEST.Models.Hospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Hospital");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40e2cbf4-1add-4f6d-9a2b-a49cc642267e"),
                            Localization = "Lisboa",
                            Name = "Hospital da Luz"
                        },
                        new
                        {
                            Id = new Guid("60a0b04c-d87f-4b81-a247-f6f3d18fd856"),
                            Localization = "Setúbal",
                            Name = "Hospital do Outão"
                        });
                });

            modelBuilder.Entity("HospitEST.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pathology")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9c3a83b-d164-4b3d-b59f-8dc3f72d5c7d"),
                            DateOfBirth = new DateTime(1990, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("77f8e67a-89b8-40af-8a4d-a26050be99b7"),
                            Name = "Bernardo Pereira",
                            Pathology = "Traumatismo Craniano"
                        },
                        new
                        {
                            Id = new Guid("3b34664f-7a9f-4e9a-8cf9-2b42559ae37a"),
                            DateOfBirth = new DateTime(1957, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("77f8e67a-89b8-40af-8a4d-a26050be99b7"),
                            Name = "Helena Porto",
                            Pathology = "AVC"
                        },
                        new
                        {
                            Id = new Guid("be811d87-b076-4952-a991-6c1c4692dd05"),
                            DateOfBirth = new DateTime(1990, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("77f8e67a-89b8-40af-8a4d-a26050be99b7"),
                            Name = "Otávio Campos",
                            Pathology = "Tumor no cérebro"
                        },
                        new
                        {
                            Id = new Guid("87d9fae4-164d-426d-b735-696ac4d6e664"),
                            DateOfBirth = new DateTime(1984, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("b2b60a21-79c0-4461-b670-6ce5fff5d2ed"),
                            Name = "Ana Júlia Araújo",
                            Pathology = "Gripe"
                        },
                        new
                        {
                            Id = new Guid("252e82ee-85f8-4491-95e6-55da3069a24d"),
                            DateOfBirth = new DateTime(2019, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("50f604f5-2cb0-4fc4-82b3-dc90a1b59016"),
                            Name = "Maitê Alves",
                            Pathology = "Asperger"
                        },
                        new
                        {
                            Id = new Guid("e29f6673-f6d0-48c6-ad49-6ae2323942a2"),
                            DateOfBirth = new DateTime(2004, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("56226013-9ded-42c3-adb5-5ce8cb276d98"),
                            Name = "António Campos",
                            Pathology = "Perna partida"
                        },
                        new
                        {
                            Id = new Guid("35c65d9a-9486-40e4-8836-9eb0c48f03df"),
                            DateOfBirth = new DateTime(2005, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("56226013-9ded-42c3-adb5-5ce8cb276d98"),
                            Name = "Daniel Moreira",
                            Pathology = "Cotovelo Rachado"
                        },
                        new
                        {
                            Id = new Guid("482c6b05-dcc6-4ae0-bac0-8172482abb73"),
                            DateOfBirth = new DateTime(2001, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("56226013-9ded-42c3-adb5-5ce8cb276d98"),
                            Name = "David Nogueira",
                            Pathology = "Ombro deslocado"
                        });
                });

            modelBuilder.Entity("HospitEST.Models.Doctor", b =>
                {
                    b.HasOne("HospitEST.Models.Hospital", "Hospital")
                        .WithMany("Doctors")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("HospitEST.Models.Patient", b =>
                {
                    b.HasOne("HospitEST.Models.Doctor", "Doctor")
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HospitEST.Models.Doctor", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("HospitEST.Models.Hospital", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
