@model HospitEST.Models.Doctor

@{
    ViewData["Title"] = "Details";
    var param = new Dictionary<string, string>
        {
            { "Id", Model.HospitalId.ToString()}
        };
}

<h1>Details</h1>

<div>
    <h4>Doctor</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Practice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Practice)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PracticeYears)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PracticeYears)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Hospital)
        </dt>
        <dd class = "col-sm-10">
            
            <a asp-controller="Hospitals" asp-action="Details" asp-all-route-data=param >@Html.DisplayFor(model => model.Hospital.Name)</a>
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Patients)
        </dt>
        <dd class = "col-sm-10">
            @if (Model.Patients != null)
            {
                foreach(var patient in Model.Patients)
                {
                    <a>@String.Concat(patient.Id, " - ", patient.Name, " - ", patient.Pathology)</a><br />
                }   
            }
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
