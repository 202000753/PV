// <auto-generated />
using System;
using HospitEST.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitEST.Migrations
{
    [DbContext(typeof(HospitESTContext))]
    [Migration("20221110232657_seeddata")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HospitEST.Models.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracticeYears")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c5d8607-333d-4ddd-a6dc-70d1fe153dd3"),
                            HospitalId = new Guid("9353a098-5331-49ad-adb8-5d7df000ba0e"),
                            Name = "Luis Silva",
                            Practice = "Neurocirurgião",
                            PracticeYears = 19
                        },
                        new
                        {
                            Id = new Guid("a905dba8-7d95-411e-867e-f8a752a71735"),
                            HospitalId = new Guid("9353a098-5331-49ad-adb8-5d7df000ba0e"),
                            Name = "Manuel Esteves",
                            Practice = "Medicina Geral e Familiar",
                            PracticeYears = 13
                        },
                        new
                        {
                            Id = new Guid("2ee23247-fb5c-415c-9520-65012df8ae2c"),
                            HospitalId = new Guid("9cf83986-9889-4e53-af22-abe7ea82b071"),
                            Name = "Luis Silva",
                            Practice = "Pediatra",
                            PracticeYears = 4
                        },
                        new
                        {
                            Id = new Guid("04d615ec-6f55-4393-b66f-f7d4bb909ccf"),
                            HospitalId = new Guid("9cf83986-9889-4e53-af22-abe7ea82b071"),
                            Name = "Miguel Neves",
                            Practice = "Ortopedista",
                            PracticeYears = 13
                        });
                });

            modelBuilder.Entity("HospitEST.Models.Hospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Hospital");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9353a098-5331-49ad-adb8-5d7df000ba0e"),
                            Localization = "Lisboa",
                            Name = "Hospital da Luz"
                        },
                        new
                        {
                            Id = new Guid("9cf83986-9889-4e53-af22-abe7ea82b071"),
                            Localization = "Setúbal",
                            Name = "Hospital do Outão"
                        });
                });

            modelBuilder.Entity("HospitEST.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pathology")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25ed66db-46bd-419b-b9f6-2acb6d712de4"),
                            DateOfBirth = new DateTime(1990, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("4c5d8607-333d-4ddd-a6dc-70d1fe153dd3"),
                            Name = "Bernardo Pereira",
                            Pathology = "Traumatismo Craniano"
                        },
                        new
                        {
                            Id = new Guid("d22b9285-691d-4e58-865f-57664068b77d"),
                            DateOfBirth = new DateTime(1957, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("4c5d8607-333d-4ddd-a6dc-70d1fe153dd3"),
                            Name = "Helena Porto",
                            Pathology = "AVC"
                        },
                        new
                        {
                            Id = new Guid("096c4325-52cf-4d63-94bf-8e360ec59efd"),
                            DateOfBirth = new DateTime(1990, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("4c5d8607-333d-4ddd-a6dc-70d1fe153dd3"),
                            Name = "Otávio Campos",
                            Pathology = "Tumor no cérebro"
                        },
                        new
                        {
                            Id = new Guid("c4b82411-5c80-4093-bf70-567253b6db9b"),
                            DateOfBirth = new DateTime(1984, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("a905dba8-7d95-411e-867e-f8a752a71735"),
                            Name = "Ana Júlia Araújo",
                            Pathology = "Gripe"
                        },
                        new
                        {
                            Id = new Guid("30abbe19-4f8e-41d9-8777-9614bccdcae8"),
                            DateOfBirth = new DateTime(2019, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2ee23247-fb5c-415c-9520-65012df8ae2c"),
                            Name = "Maitê Alves",
                            Pathology = "Asperger"
                        },
                        new
                        {
                            Id = new Guid("6f8bdf2c-f8c5-4fe9-878b-5b466455e46e"),
                            DateOfBirth = new DateTime(2004, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("04d615ec-6f55-4393-b66f-f7d4bb909ccf"),
                            Name = "António Campos",
                            Pathology = "Perna partida"
                        },
                        new
                        {
                            Id = new Guid("4430d11a-8e4b-4b48-a6b3-aa00c22c62ba"),
                            DateOfBirth = new DateTime(2005, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("04d615ec-6f55-4393-b66f-f7d4bb909ccf"),
                            Name = "Daniel Moreira",
                            Pathology = "Cotovelo Rachado"
                        },
                        new
                        {
                            Id = new Guid("57561df7-8711-4e25-a36f-5a59f00ec86b"),
                            DateOfBirth = new DateTime(2001, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("04d615ec-6f55-4393-b66f-f7d4bb909ccf"),
                            Name = "David Nogueira",
                            Pathology = "Ombro deslocado"
                        });
                });

            modelBuilder.Entity("HospitEST.Models.Doctor", b =>
                {
                    b.HasOne("HospitEST.Models.Hospital", "Hospital")
                        .WithMany("Doctors")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("HospitEST.Models.Patient", b =>
                {
                    b.HasOne("HospitEST.Models.Doctor", "Doctor")
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HospitEST.Models.Doctor", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("HospitEST.Models.Hospital", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
